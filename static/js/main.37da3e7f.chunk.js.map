{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortingParams","goodsFromServer","App","useState","option","Default","reversed","sortOptions","setSortOptions","visibleGoods","goods","sort","good1","good2","Name","localeCompare","Length","length","reverse","getVisibleGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,iFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,gBAAAA,E,YAAAA,M,KAWL,IA0BaE,EAAgB,WAC3B,MAAsCC,mBAAsB,CAC1DC,OAAQJ,EAAcK,QACtBC,UAAU,IAFZ,mBAAOC,EAAP,KAAoBC,EAApB,KAKMC,EAhCgB,SACtBC,EADsB,GAGlB,IADFN,EACC,EADDA,OAAQE,EACP,EADOA,SAENG,EAAeC,EAmBnB,OAjBIN,IACFK,EAAe,YAAIA,GAAcE,MAAK,SAACC,EAAOC,GAC5C,OAAQT,GACN,KAAKJ,EAAcc,KACjB,OAAOF,EAAMG,cAAcF,GAC7B,KAAKb,EAAcgB,OACjB,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,OAKXX,IACFG,EAAe,YAAIA,GAAcS,WAG5BT,EAScU,CACnBlB,EACAM,GAGF,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYf,EAAYH,SAAWJ,EAAcc,OAErDS,QAAS,kBAAMf,EAAe,2BACzBD,GADwB,IAE3BH,OAAQJ,EAAcc,SAT1B,iCAeA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYf,EAAYH,SAAWJ,EAAcgB,SAErDO,QAAS,kBAAMf,EAAe,2BACzBD,GADwB,IAE3BH,OAAQJ,EAAcgB,WAT1B,4BAeA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaf,EAAYD,WAE7BiB,QAAS,kBAAMf,EAAe,2BACzBD,GADwB,IAE3BD,UAAWC,EAAYD,aAT3B,qBAeCG,IAAiBR,GAEhB,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAMf,EAAe,CAC5BJ,OAAQJ,EAAcK,QACtBC,UAAU,KALd,sBAaJ,6BACGG,EAAae,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCnIjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.37da3e7f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortingParams {\n  Name = 'name',\n  Length = 'length',\n  Default = '',\n}\n\ninterface SortOptions {\n  option: SortingParams,\n  reversed: boolean,\n}\n\nconst getVisibleGoods = (\n  goods: typeof goodsFromServer,\n  { option, reversed }: SortOptions,\n) => {\n  let visibleGoods = goods;\n\n  if (option) {\n    visibleGoods = [...visibleGoods].sort((good1, good2) => {\n      switch (option) {\n        case SortingParams.Name:\n          return good1.localeCompare(good2);\n        case SortingParams.Length:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    visibleGoods = [...visibleGoods].reverse();\n  }\n\n  return visibleGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortOptions, setSortOptions] = useState<SortOptions>({\n    option: SortingParams.Default,\n    reversed: false,\n  });\n\n  const visibleGoods = getVisibleGoods(\n    goodsFromServer,\n    sortOptions,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortOptions.option !== SortingParams.Name },\n          )}\n          onClick={() => setSortOptions({\n            ...sortOptions,\n            option: SortingParams.Name,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortOptions.option !== SortingParams.Length },\n          )}\n          onClick={() => setSortOptions({\n            ...sortOptions,\n            option: SortingParams.Length,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !sortOptions.reversed },\n          )}\n          onClick={() => setSortOptions({\n            ...sortOptions,\n            reversed: !sortOptions.reversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {visibleGoods !== goodsFromServer\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => setSortOptions({\n              option: SortingParams.Default,\n              reversed: false,\n            })}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}